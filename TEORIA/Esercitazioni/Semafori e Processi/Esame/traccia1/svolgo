#define N 10
#deifne C 123

mutex:signal:1
sign[N]: array of signal of N: all to 0
credito[N]: array of int
gener[N]: array of int
pid[N]: array of int
qt: int: 0 
proc: int:0
i: int: 0
flag: int: 0
max: int: 0
imax: int: -1

process_main(){
//assegna a tutte le variabili di processo valori standard
for i=0 to N
    credito[i]= C;
    gener[i]=0;

// avvia gli N processi
for i=o to N
    process_p();

//fin quando non ci siano tutti i processi   
while(i<N) do nothing

//
for i=0 to N{
    if(credito[i]>max){
        imax=i;
        max= credito[i];
    }else if (credito[i] == max){
        if(pid[i]<pid[imax]){
            imax=i;
        }
    }
}    
for i=0 to N{
    if ( i != imax){
        credito[i]-= gener[i];
        signal(sign[i]);
        credito[imax]+=gener[i];
    }
}

process_p(){
begin
    // sezione critica -> prende il suo valore intero
    wait(mutex);
    int k = i;
    i++;
    signal(mutex);
    // genera il suo numero
    gener[k] = 1+rand%C;
    // si identifica
    pid[k] = getpid;
    
    wait(sign[k]); // aspetto che finisca le operazioni il main
    if(gener[k]==0){ // se il suo valore Ã¨ = 0 allora termina
        exit();
    }else{
        // fa cose
    }
    exit();
end
}
