//Scrivere un programma C 
in cui un processo crea un processo figlio 
Il processo figlio calcola la sequenza di Fibonacci di ordine n (n<=12). 
Quando termina restituisce il valore calcolato come codice di terminazione.
Il padre attende la terminazione del figlio ed esamina lo stato di terminazione 
    Se lo stato di terminazione è relativo ad una terminazione con successo e il codice di terminazione è un valore minore di 50 Crea un secondo figlio che esegue il comando ls–al exe.out. 
Attende il secondo figlio, stampa un messaggio e termina  Altrimenti, stampa un messaggio e termina

SI RICORDA CHE LE FUNZIONI RITORNANO DAL PROCESSO PADRE TRAMITE 2 VALORI:
STATO TERMINAZIONE DEL PROECSSO DATO DA "return val"
E POSSIBILE CHE IL PADRE CAPTI LO STATO TERMINAZIONE DEI PROCESSI FIGLI TRAMITE LA CHIAMATA waitpid(pid_process, &status, 0):

if (WIFEXITED(status))
printf(“term. normale, exit status =%d\n”,WEXITSTATUS(status));
else if (WIFSIGNALED(status))
printf(“term. anomala”, num. segnale =%d\n”,WTERMSIG(status));
else if (WIFSTOPPED(status))
printf(“figlio fermato, num. segnale %d\n”, WSTOPSIG(status));
}

NEL NOSTRO CASO:
if (WIFEXITED(status) && WEXITSTATUS(status) > 50){
        printf("term. normale, exit status =%d\n",WEXITSTATUS(status));
